# -*- coding: utf-8 -*-
"""LVADSUSR96-LOGHAPRIYA-LAB2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cfyWN6xMd8io1I0kOIo455Xi85LCZnWs
"""

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, mean_squared_error, precision_score, f1_score, recall_score, confusion_matrix
from sklearn.preprocessing import MinMaxScaler
import time
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from xgboost import XGBClassifier
from sklearn.cluster import KMeans
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
import warnings
warnings.filterwarnings("ignore")

data = pd.read_csv("/content/sample_data/Mall_Customers.csv")

print(data.isnull().sum())
data.fillna(data.mean(), inplace=True)
dupl = df[df.duplicated()]
print(dupl)

data['Age_Income_Ratio'] = data['Age'] / data['Annual Income (k$)']
scaler = StandardScaler()
scaled_data = scaler.fit_transform(data[['Age', 'Annual Income (k$)', 'Spending Score (1-100)', 'Age_Income_Ratio']])

k_val = range(2, 10)
inertia_value = []
silhouette_scores = []

for k in k_val:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(scaled_data)
    inertia_value.append(kmeans.inertia_)
    silhouette_scores.append(silhouette_score(scaled_data, kmeans.labels_))

print("Silhouette scores\n")
plt.plot(k_val, silhouette_scores, marker='o')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Silhouette Score')
plt.title('Silhouette Scores for Optimal k')
plt.xticks(k_val)
plt.show()

print("Elbow curve\n")
plt.plot(k_val, inertia_value, marker='o')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.title('Elbow Curve for Optimal k')
plt.xticks(k_val)
plt.show()

optimal_k = 7
kmeans = KMeans(n_clusters=optimal_k, random_state=42)
kmeans.fit(scaled_data)

cluster_labels = kmeans.predict(scaled_data)

silhouette_avg = silhouette_score(scaled_data, cluster_labels)
print("silhouette score: ",silhouette_avg)

data['Cluster'] = kmeans.labels_
cluster_prof = data.groupby('Cluster').mean()
print(cluster_prof)

# Target marketing can be achieved by targetting high value products to people between the age group of 32 as they have the most spending score.

# And the products with almost satified price range can be promoted to their correponding age group cluster. hence enhance the probability of a customer to spend on that product. Promoting products within a suitable price range to the corresponding age group cluster can enhance the likelihood of customer engagement and purchases. By aligning product offerings with the financial capabilities and preferences of different age segments, businesses can optimize their marketing strategies and maximize returns on investment.

# In essence, targeted marketing leverages consumer insights to tailor promotional campaigns and product offerings to specific demographic segments, ultimately driving customer engagement and increasing sales.